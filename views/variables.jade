extends content

block body
  h1#variables Variablen und Datentypen
  h3#vars Variablen
  p.
    Variablen sollten für die meisten schon aus der Mathematik bekannt sein. In der Programmierung lässt sich ein Variable als Platzhalter für einen bestimmten Inhalt sehen.
    <br/>
    So lässt sich sagen: Eine Variable ordnet einem <strong>Wert</strong> einen <strong>Namen</strong> zu.

  h3#literals Literale
  p.
    Literale sind feste Werte, die direkt - so wie sie sind - im Code stehen.
    
  div.executor
    label Literale
    pre.
      print(4)
      print("Hi")
  p Sowohl <code>4</code> als auch <code>"Hi"</code> sind hier Literale.

  h3#datatypes Datentypen
  p.
    Im Gegensatz zu anderen Programmiersprachen/Skriptsprachen ist Lua <i>dynamisch typisiert</i>. Das bedeutet, dass eine Variable jeden beliebigen Typ annehmen und diesen wechseln kann.
    Das macht Lua gerade auch für Anfänger besonders attraktiv, da es dadurch besonders einfach wird.
    <br/>
    Beim Schreiben von Lua Code muss lediglich die Syntax der Defintion von Literalen bekannt sein.

  h4 Zahlen
  p.
    Lua benutzt für alle Zahlen sogenannte <i>Fließkommazahlen doppelter Genauigkeit</i>, d.h. du musst dir keine Sorgen über zu kleine Wertebereiche machen (das bedeutet jedoch nicht,
    dass eine Zahl beliebig groß sein kann). Dezimalzahlen mit einem Komma müssen statt eines Dezimalkommas jedoch einen Dezimalpunkt verwenden
    
    Zahlen können ganz einfach definiert werden:
    
  div.executor
    label Variablen: Zahlen
    pre.
     meineZahl = 42
     print(meineZahl)
     meineAndereZahl = 13.37 -- Dezimalzahl mit Dezimalpunkt
  p An diesem Beispiel lässt sich sehen, wie eine Variable als Platzhalter eingesetzt werden kann.

  h4 Strings / Zeichenketten
  p.
    Zeichenketten, also beliebige Aneinanderreihungen von Zeichen, in der Programmierung auch <strong>Strings</strong> genannt, müssen zwischen Anführungszeichen gestellt werden.
    <pre>meineZeichenkette = "Hallo Welt!"</pre>
    Alternativ sind in Lua auch einfache statt doppelte Anführungszeichen erlaubt:
    <pre>meineZeichenkette = 'Hallo Welt!'</pre>
    Beide Varianten sind in Lua gleichwertig (in anderen Sprachen wie z.B. PHP oder C++ ist das anders!)

  h4 Booleans
  p Boolische Werte repräsentieren die Wahrheitswerte. Entweder ist etwas wahr, dann ist es <code>true</code> oder nicht wahr, dann ist es <code>false</code>

  div.executor
    label Variablen: Booleans
    pre.
      a = true
      b = false
      
  h4 Nil
  p <code>nil</code> ist <i>nichts</i>, d.h. der Wert, den Variablen haben, wenn sie nicht definiert sind. 

  h4 Tables
  p.
    Tables (deutsch: Tabellen) sind definitiv Luas mächtigster Datentyp. Tables werden jedoch erst zu einem späteren Zeitpunkt behandelt.
  // TODO: Ref einfügen

  h3#variablenames Variablennamen
  p Damit der Lua <i>Interpreter</i> (das Programm, das den Lua Code ausführt) Variablen auch als solche identifizieren kann, muss man sich an bestimmte Regeln halten.

  p Der Name darf...
    ul
      li ...nur aus ASCII Zeichen bestehen (d.h. Sonderzeichen und Umlaute sind <strong>nicht</strong> erlaubt)
      li ...nicht mit einer Zahl anfangen (muss also mit einem Buchstaben anfangen)

  p.
    Des Weiteren ist es sinnvoll sich an bestimmte Namenskonventionen zu halten, damit der Code auch von anderen Entwicklern möglichst schnell verstanden werden kann.
    Der wichtigste Punkt ist, dass du deinen Variablen eindeutige und selbsterklärende Namen geben solltest. Weiterhin solltest du überlegen, ob sich später vielleicht Leute aus dem
    internationalen Raum anschließen und dann typischerweise mit englischen Namen arbeiten.
    
  h3#exercise Übung
  h4 Teil 1
  p Aufgabe dieser Übung ist das Definieren von 4 Variablen (die Namen der Variablen können frei gewählt werden, wenn nicht anders angegeben)
    ol
      li Eine Variable soll mit der <strong>ganzen Zahl</strong> <code>-5</code> initialisiert werden
      li Variable mit dem <strong>Fließkommawert</strong> <code>42.1337</code>
      li Variable mit dem <strong>String</strong> <code>Mein Name ist Fritz</code>
      li Variable 4 soll Variable 2 zugewiesen werden und den Namen <code>letzteVariable</code> tragen
  
  p Im Anschluss sollen alle 3 Variablen in der angeführten Reihenfolge ausgegeben werden.
  
  div.solution
    div.content
      div.executor
        label Lösung: Variablen
        pre.
          -- Variablen definieren
          variable1 = -5
          variable2 = 42.1337
          variable3 = "Mein Name ist Fritz" -- auf Anführungszeichen achten!
          letzteVariable = variable2
          
          -- Variablen ausgeben
          -- print kann zu Testzwecken auch mehrere Variablen gleichzeitig ausgeben
          print(variable1, variable2, variable3, letzteVariable)

    h4 Teil 2
    p In dieser Aufgabe werden einige Verständnisfragen gestellt:
    ol
      li Welche der folgenden Variablen sind <strong>keine</strong> gültigen Variablennamen?
        ul
          li variable1
          li 1variable
          li günther
          li fritz
          li __
          li --
          li print
      li Gibt es in Lua einen Unterschied zwischen einfachen und doppelten Anführungszeichen?
          
    div.solution
      div.content
        ol
          li
            ul
              li 1variable, weil eine Zahl am Anfang ist
              li günther, weil Umlaut enthalten ist
              li --, nicht erlaubtes Zeichen (da verwendet für Kommentare) - würde im Regelfall jedoch nicht direkt zum Fehler führen, da die Zeile dann auskommentiert ist
              li print <strong>ist gültig</strong>, jedoch führt das dazu, dass die print-Funktion später nicht mehr funktioniert (weil sie überschrieben wurde)
          li Nein, in Lua sind beide Notation äquivalent. In anderne Sprachen wie z.B. PHP oder C++ jedoch nicht (wobei sich die Bedeutung bei diesen Sprachen wieder unterscheidet)
