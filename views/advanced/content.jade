extends ../layout

block navigation
  ul.nav.nav-pills.nav-stacked
    li: a(href="/advanced/introduction") Einleitung
      if (req.path == "/advanced/introduction" || req.path == "/advanced")
        ul
          li: a(href="/beginner/introduction#audience") Zielgruppe
          li: a(href="/beginner/introduction#sources") Quellen
          
    li: a(href="/advanced/tables") Tables
      if (req.path == "/advanced/tables")
        ul
          li: a(href="/advanced/tables#motivation") Motivation
          li: a(href="/advanced/tables#simplify") Vereinfachungen
          li: a(href="/advanced/tables#usefulfuncs") NÃ¼tzliche Funktionen
          li: a(href="/advanced/tables#internal") Internas & Performance
          
    li: a(href="/advanced/iterators") Iteratoren
      if (req.path == "/advanced/iterators")
        ul
          li: a(href="/advanced/iterators#motivation") Motivation
          li: a(href="/advanced/iterators#functionality") Funktionsweise
          li: a(href="/advanced/iterators#predefined") Vordefinierte Iteratoren
      
    li: a(href="/advanced/variables") Variablen und Funktionen
      if (req.path == "/advanced/variables")
        ul
          li: a(href="/advanced/variables#anonymous") Anonyme Funktionen
          li: a(href="/advanced/variables#varargs") Varargs
          li: a(href="/advanced/variables#types") Typen
          li: a(href="/advanced/variables#g") Globale Variablen
          li: a(href="/advanced/variables#copyreference") Kopie vs. Referenz

    li: a(href="/advanced/metatables") Metatables
      if (req.path == "/advanced/metatables")
        ul
          li: a(href="/advanced/metatables#motivation") Motivation
          li: a(href="/advanced/metatables#setmt") Metatable setzen
          li: a(href="/advanced/metatables#metamethods") Metamethoden
          li: a(href="/advanced/metatables#raw") rawget & rawset
          
    li: a(href="/advanced/coroutine") Coroutinen
      if (req.path == "/advanced/coroutine")
        ul
          li: a(href="/advanced/coroutine#motivation") Motivation
          li: a(href="/advanced/coroutine#functionality") Funktionsweise
          
    li: a(href="/advanced/bytecode") Bytecode und Luac
      if (req.path == "/advanced/bytecode")
        ul
          li: a(href="/advanced/bytecode#motivation") Motivation
          li: a(href="/advanced/bytecode#interpreter") Interpreter
          li: a(href="/advanced/bytecode#bytecode") Bytecode
          li: a(href="/advanced/bytecode#luac") Luac
          li: a(href="/advanced/bytecode#assembly") Assembler
          li: a(href="/advanced/bytecode#jit") JIT Compiling
          
    li: a(href="/advanced/debug") Debug
      if (req.path == "/advanced/debug")
        ul
          li: a(href="/advanced/debug#functions") Funktionen
